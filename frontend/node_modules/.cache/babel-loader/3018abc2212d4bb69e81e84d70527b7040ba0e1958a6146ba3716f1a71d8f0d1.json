{"ast":null,"code":"// Token and Authentication Management Utilities\n\n// Save authentication data\nexport const saveAuthData = (token, user) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('user', JSON.stringify(user));\n  localStorage.setItem('authTimestamp', Date.now().toString());\n};\n\n// Get authentication data\nexport const getAuthData = () => {\n  const token = localStorage.getItem('token');\n  const user = JSON.parse(localStorage.getItem('user') || 'null');\n  const authTimestamp = localStorage.getItem('authTimestamp');\n  return {\n    token,\n    user,\n    authTimestamp\n  };\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  const {\n    token,\n    user\n  } = getAuthData();\n  return !!(token && user);\n};\n\n// Get current user\nexport const getCurrentUser = () => {\n  const {\n    user\n  } = getAuthData();\n  return user;\n};\n\n// Get auth token\nexport const getAuthToken = () => {\n  const {\n    token\n  } = getAuthData();\n  return token;\n};\n\n// Clear authentication data (logout)\nexport const clearAuthData = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  localStorage.removeItem('authTimestamp');\n};\n\n// Check if token is expired (optional - for client-side validation)\nexport const isTokenExpired = () => {\n  const {\n    authTimestamp\n  } = getAuthData();\n  if (!authTimestamp) return true;\n\n  // Check if token is older than 24 hours (86400000 ms)\n  const tokenAge = Date.now() - parseInt(authTimestamp);\n  return tokenAge > 86400000;\n};\n\n// Create auth headers for API requests\nexport const getAuthHeaders = () => {\n  const token = getAuthToken();\n  return {\n    'Content-Type': 'application/json',\n    'Authorization': token ? `Bearer ${token}` : ''\n  };\n};\n\n// Auto-logout if token is expired\nexport const checkTokenExpiry = () => {\n  if (isTokenExpired() && isAuthenticated()) {\n    clearAuthData();\n    window.location.href = '/login';\n    return true;\n  }\n  return false;\n};","map":{"version":3,"names":["saveAuthData","token","user","localStorage","setItem","JSON","stringify","Date","now","toString","getAuthData","getItem","parse","authTimestamp","isAuthenticated","getCurrentUser","getAuthToken","clearAuthData","removeItem","isTokenExpired","tokenAge","parseInt","getAuthHeaders","checkTokenExpiry","window","location","href"],"sources":["E:/Sarin/dairy-farm-app/frontend/src/utils/auth.js"],"sourcesContent":["// Token and Authentication Management Utilities\r\n\r\n// Save authentication data\r\nexport const saveAuthData = (token, user) => {\r\n  localStorage.setItem('token', token);\r\n  localStorage.setItem('user', JSON.stringify(user));\r\n  localStorage.setItem('authTimestamp', Date.now().toString());\r\n};\r\n\r\n// Get authentication data\r\nexport const getAuthData = () => {\r\n  const token = localStorage.getItem('token');\r\n  const user = JSON.parse(localStorage.getItem('user') || 'null');\r\n  const authTimestamp = localStorage.getItem('authTimestamp');\r\n  \r\n  return { token, user, authTimestamp };\r\n};\r\n\r\n// Check if user is authenticated\r\nexport const isAuthenticated = () => {\r\n  const { token, user } = getAuthData();\r\n  return !!(token && user);\r\n};\r\n\r\n// Get current user\r\nexport const getCurrentUser = () => {\r\n  const { user } = getAuthData();\r\n  return user;\r\n};\r\n\r\n// Get auth token\r\nexport const getAuthToken = () => {\r\n  const { token } = getAuthData();\r\n  return token;\r\n};\r\n\r\n// Clear authentication data (logout)\r\nexport const clearAuthData = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n  localStorage.removeItem('authTimestamp');\r\n};\r\n\r\n// Check if token is expired (optional - for client-side validation)\r\nexport const isTokenExpired = () => {\r\n  const { authTimestamp } = getAuthData();\r\n  if (!authTimestamp) return true;\r\n  \r\n  // Check if token is older than 24 hours (86400000 ms)\r\n  const tokenAge = Date.now() - parseInt(authTimestamp);\r\n  return tokenAge > 86400000;\r\n};\r\n\r\n// Create auth headers for API requests\r\nexport const getAuthHeaders = () => {\r\n  const token = getAuthToken();\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': token ? `Bearer ${token}` : ''\r\n  };\r\n};\r\n\r\n// Auto-logout if token is expired\r\nexport const checkTokenExpiry = () => {\r\n  if (isTokenExpired() && isAuthenticated()) {\r\n    clearAuthData();\r\n    window.location.href = '/login';\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,YAAY,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;EAC3CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;EACpCE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EAClDC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEG,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC;AAC9D,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAMT,KAAK,GAAGE,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMT,IAAI,GAAGG,IAAI,CAACO,KAAK,CAACT,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC;EAC/D,MAAME,aAAa,GAAGV,YAAY,CAACQ,OAAO,CAAC,eAAe,CAAC;EAE3D,OAAO;IAAEV,KAAK;IAAEC,IAAI;IAAEW;EAAc,CAAC;AACvC,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAM;IAAEb,KAAK;IAAEC;EAAK,CAAC,GAAGQ,WAAW,CAAC,CAAC;EACrC,OAAO,CAAC,EAAET,KAAK,IAAIC,IAAI,CAAC;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMa,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAM;IAAEb;EAAK,CAAC,GAAGQ,WAAW,CAAC,CAAC;EAC9B,OAAOR,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMc,YAAY,GAAGA,CAAA,KAAM;EAChC,MAAM;IAAEf;EAAM,CAAC,GAAGS,WAAW,CAAC,CAAC;EAC/B,OAAOT,KAAK;AACd,CAAC;;AAED;AACA,OAAO,MAAMgB,aAAa,GAAGA,CAAA,KAAM;EACjCd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;EAChCf,YAAY,CAACe,UAAU,CAAC,MAAM,CAAC;EAC/Bf,YAAY,CAACe,UAAU,CAAC,eAAe,CAAC;AAC1C,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAM;IAAEN;EAAc,CAAC,GAAGH,WAAW,CAAC,CAAC;EACvC,IAAI,CAACG,aAAa,EAAE,OAAO,IAAI;;EAE/B;EACA,MAAMO,QAAQ,GAAGb,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGa,QAAQ,CAACR,aAAa,CAAC;EACrD,OAAOO,QAAQ,GAAG,QAAQ;AAC5B,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMrB,KAAK,GAAGe,YAAY,CAAC,CAAC;EAC5B,OAAO;IACL,cAAc,EAAE,kBAAkB;IAClC,eAAe,EAAEf,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG;EAC/C,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMsB,gBAAgB,GAAGA,CAAA,KAAM;EACpC,IAAIJ,cAAc,CAAC,CAAC,IAAIL,eAAe,CAAC,CAAC,EAAE;IACzCG,aAAa,CAAC,CAAC;IACfO,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC/B,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}