{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api';\n\n// Simple API calls without complex helper functions\nexport const authAPI = {\n  // Register a new user\n  register: async userData => {\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Registration failed');\n    }\n    return data;\n  },\n  // Login user\n  login: async credentials => {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Login failed');\n    }\n    return data;\n  },\n  // Get user profile\n  getProfile: async () => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to get profile');\n    }\n    return data;\n  },\n  // Update user profile\n  updateProfile: async profileData => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(profileData)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to update profile');\n    }\n    return data;\n  }\n};\n\n// User API calls\nexport const userAPI = {\n  // Get user profile\n  getProfile: async token => {\n    return apiCall('/auth/profile', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n};\nexport default apiCall;","map":{"version":3,"names":["API_BASE_URL","authAPI","register","userData","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","login","credentials","getProfile","token","localStorage","getItem","Authorization","updateProfile","profileData","userAPI","apiCall"],"sources":["E:/Sarin/dairy-farm-app/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n// Simple API calls without complex helper functions\r\nexport const authAPI = {\r\n  // Register a new user\r\n  register: async (userData) => {\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Registration failed');\r\n    }\r\n    return data;\r\n  },\r\n\r\n  // Login user\r\n  login: async (credentials) => {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Login failed');\r\n    }\r\n    return data;\r\n  },\r\n\r\n  // Get user profile\r\n  getProfile: async () => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_BASE_URL}/auth/profile`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Failed to get profile');\r\n    }\r\n    return data;\r\n  },\r\n\r\n  // Update user profile\r\n  updateProfile: async (profileData) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_BASE_URL}/auth/profile`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(profileData),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Failed to update profile');\r\n    }\r\n    return data;\r\n  }\r\n};\r\n\r\n// User API calls\r\nexport const userAPI = {\r\n  // Get user profile\r\n  getProfile: async (token) => {\r\n    return apiCall('/auth/profile', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\nexport default apiCall;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;;AAEhD;AACA,OAAO,MAAMC,OAAO,GAAG;EACrB;EACAC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,gBAAgB,EAAE;MAC5DM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,qBAAqB,CAAC;IACxD;IACA,OAAOJ,IAAI;EACb,CAAC;EAED;EACAK,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,aAAa,EAAE;MACzDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACO,WAAW;IAClC,CAAC,CAAC;IAEF,MAAMN,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,cAAc,CAAC;IACjD;IACA,OAAOJ,IAAI;EACb,CAAC;EAED;EACAO,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,eAAe,EAAE;MAC3DO,OAAO,EAAE;QACPe,aAAa,EAAE,UAAUH,KAAK;MAChC;IACF,CAAC,CAAC;IAEF,MAAMR,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,uBAAuB,CAAC;IAC1D;IACA,OAAOJ,IAAI;EACb,CAAC;EAED;EACAY,aAAa,EAAE,MAAOC,WAAW,IAAK;IACpC,MAAML,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,eAAe,EAAE;MAC3DM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCe,aAAa,EAAE,UAAUH,KAAK;MAChC,CAAC;MACDX,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACc,WAAW;IAClC,CAAC,CAAC;IAEF,MAAMb,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,0BAA0B,CAAC;IAC7D;IACA,OAAOJ,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMc,OAAO,GAAG;EACrB;EACAP,UAAU,EAAE,MAAOC,KAAK,IAAK;IAC3B,OAAOO,OAAO,CAAC,eAAe,EAAE;MAC9BnB,OAAO,EAAE;QACPe,aAAa,EAAE,UAAUH,KAAK;MAChC;IACF,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAeO,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}