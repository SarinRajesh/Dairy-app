{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sarin\\\\dairy-farm-app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser && token) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        logout();\n      }\n    }\n  }, [token]);\n  const login = (userData, userToken) => {\n    setUser(userData);\n    setToken(userToken);\n    localStorage.setItem('token', userToken);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const updateUser = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      isAuthenticated: !!token,\n      login,\n      logout,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Z6Vnyj+tvkpOopJdPBR2TDv1n60=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","storedUser","JSON","parse","error","logout","login","userData","userToken","setItem","stringify","removeItem","updateUser","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Sarin/dairy-farm-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser && token) {\r\n      try {\r\n        setUser(JSON.parse(storedUser));\r\n      } catch (error) {\r\n        logout();\r\n      }\r\n    }\r\n  }, [token]);\r\n\r\n  const login = (userData, userToken) => {\r\n    setUser(userData);\r\n    setToken(userToken);\r\n    localStorage.setItem('token', userToken);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const updateUser = (userData) => {\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      token,\r\n      isAuthenticated: !!token,\r\n      login,\r\n      logout,\r\n      updateUser,\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACgB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;EAEjE;EACAhB,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIC,UAAU,IAAIJ,KAAK,EAAE;MACvB,IAAI;QACFD,OAAO,CAACM,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,MAAM,CAAC,CAAC;MACV;IACF;EACF,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,MAAMS,KAAK,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;IACrCZ,OAAO,CAACW,QAAQ,CAAC;IACjBT,QAAQ,CAACU,SAAS,CAAC;IACnBT,YAAY,CAACU,OAAO,CAAC,OAAO,EAAED,SAAS,CAAC;IACxCT,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACH,QAAQ,CAAC,CAAC;EACxD,CAAC;EAED,MAAMF,MAAM,GAAGA,CAAA,KAAM;IACnBT,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCZ,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMC,UAAU,GAAIL,QAAQ,IAAK;IAC/BX,OAAO,CAACW,QAAQ,CAAC;IACjBR,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACH,QAAQ,CAAC,CAAC;EACxD,CAAC;EAED,oBACErB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAC3BnB,IAAI;MACJE,KAAK;MACLkB,eAAe,EAAE,CAAC,CAAClB,KAAK;MACxBS,KAAK;MACLD,MAAM;MACNO;IACF,CAAE;IAAAnB,QAAA,EACCA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,GAAA,CA/CWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}