{"ast":null,"code":"// Token management utilities\nexport const getToken = () => {\n  return localStorage.getItem('token');\n};\nexport const getTokenData = () => {\n  const tokenData = localStorage.getItem('tokenData');\n  return tokenData ? JSON.parse(tokenData) : null;\n};\nexport const isTokenValid = () => {\n  const token = getToken();\n  const tokenData = getTokenData();\n  if (!token || !tokenData || !tokenData.expiresAt) {\n    return false;\n  }\n  return new Date().getTime() < tokenData.expiresAt;\n};\nexport const setToken = token => {\n  const tokenData = {\n    token,\n    expiresAt: new Date().getTime() + 24 * 60 * 60 * 1000 // 24 hours\n  };\n  localStorage.setItem('token', token);\n  localStorage.setItem('tokenData', JSON.stringify(tokenData));\n};\nexport const clearToken = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('tokenData');\n  localStorage.removeItem('user');\n};\nexport const getUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};\nexport const setUser = user => {\n  localStorage.setItem('user', JSON.stringify(user));\n};\nexport const getAuthHeaders = () => {\n  const token = getToken();\n  return {\n    'Content-Type': 'application/json',\n    ...(token && {\n      'Authorization': `Bearer ${token}`\n    })\n  };\n};\n\n// API request helper with authentication\nexport const apiRequest = async (url, options = {}) => {\n  const headers = getAuthHeaders();\n  const config = {\n    ...options,\n    headers: {\n      ...headers,\n      ...options.headers\n    }\n  };\n  const response = await fetch(url, config);\n  if (response.status === 401) {\n    // Token is invalid, clear auth data\n    clearToken();\n    window.location.href = '/login';\n    return null;\n  }\n  return response;\n};","map":{"version":3,"names":["getToken","localStorage","getItem","getTokenData","tokenData","JSON","parse","isTokenValid","token","expiresAt","Date","getTime","setToken","setItem","stringify","clearToken","removeItem","getUser","user","setUser","getAuthHeaders","apiRequest","url","options","headers","config","response","fetch","status","window","location","href"],"sources":["E:/Sarin/dairy-farm-app/frontend/src/utils/auth.js"],"sourcesContent":["// Token management utilities\r\nexport const getToken = () => {\r\n  return localStorage.getItem('token');\r\n};\r\n\r\nexport const getTokenData = () => {\r\n  const tokenData = localStorage.getItem('tokenData');\r\n  return tokenData ? JSON.parse(tokenData) : null;\r\n};\r\n\r\nexport const isTokenValid = () => {\r\n  const token = getToken();\r\n  const tokenData = getTokenData();\r\n  \r\n  if (!token || !tokenData || !tokenData.expiresAt) {\r\n    return false;\r\n  }\r\n  \r\n  return new Date().getTime() < tokenData.expiresAt;\r\n};\r\n\r\nexport const setToken = (token) => {\r\n  const tokenData = {\r\n    token,\r\n    expiresAt: new Date().getTime() + (24 * 60 * 60 * 1000) // 24 hours\r\n  };\r\n  \r\n  localStorage.setItem('token', token);\r\n  localStorage.setItem('tokenData', JSON.stringify(tokenData));\r\n};\r\n\r\nexport const clearToken = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('tokenData');\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nexport const getUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\nexport const setUser = (user) => {\r\n  localStorage.setItem('user', JSON.stringify(user));\r\n};\r\n\r\nexport const getAuthHeaders = () => {\r\n  const token = getToken();\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    ...(token && { 'Authorization': `Bearer ${token}` })\r\n  };\r\n};\r\n\r\n// API request helper with authentication\r\nexport const apiRequest = async (url, options = {}) => {\r\n  const headers = getAuthHeaders();\r\n  \r\n  const config = {\r\n    ...options,\r\n    headers: {\r\n      ...headers,\r\n      ...options.headers\r\n    }\r\n  };\r\n  \r\n  const response = await fetch(url, config);\r\n  \r\n  if (response.status === 401) {\r\n    // Token is invalid, clear auth data\r\n    clearToken();\r\n    window.location.href = '/login';\r\n    return null;\r\n  }\r\n  \r\n  return response;\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,MAAMC,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACnD,OAAOE,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACF,SAAS,CAAC,GAAG,IAAI;AACjD,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAChC,MAAMC,KAAK,GAAGR,QAAQ,CAAC,CAAC;EACxB,MAAMI,SAAS,GAAGD,YAAY,CAAC,CAAC;EAEhC,IAAI,CAACK,KAAK,IAAI,CAACJ,SAAS,IAAI,CAACA,SAAS,CAACK,SAAS,EAAE;IAChD,OAAO,KAAK;EACd;EAEA,OAAO,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGP,SAAS,CAACK,SAAS;AACnD,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAIJ,KAAK,IAAK;EACjC,MAAMJ,SAAS,GAAG;IAChBI,KAAK;IACLC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAK,CAAC;EAC1D,CAAC;EAEDV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;EACpCP,YAAY,CAACY,OAAO,CAAC,WAAW,EAAER,IAAI,CAACS,SAAS,CAACV,SAAS,CAAC,CAAC;AAC9D,CAAC;AAED,OAAO,MAAMW,UAAU,GAAGA,CAAA,KAAM;EAC9Bd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;EAChCf,YAAY,CAACe,UAAU,CAAC,WAAW,CAAC;EACpCf,YAAY,CAACe,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAC3B,MAAMC,IAAI,GAAGjB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOgB,IAAI,GAAGb,IAAI,CAACC,KAAK,CAACY,IAAI,CAAC,GAAG,IAAI;AACvC,CAAC;AAED,OAAO,MAAMC,OAAO,GAAID,IAAI,IAAK;EAC/BjB,YAAY,CAACY,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACI,IAAI,CAAC,CAAC;AACpD,CAAC;AAED,OAAO,MAAME,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMZ,KAAK,GAAGR,QAAQ,CAAC,CAAC;EACxB,OAAO;IACL,cAAc,EAAE,kBAAkB;IAClC,IAAIQ,KAAK,IAAI;MAAE,eAAe,EAAE,UAAUA,KAAK;IAAG,CAAC;EACrD,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMa,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACrD,MAAMC,OAAO,GAAGJ,cAAc,CAAC,CAAC;EAEhC,MAAMK,MAAM,GAAG;IACb,GAAGF,OAAO;IACVC,OAAO,EAAE;MACP,GAAGA,OAAO;MACV,GAAGD,OAAO,CAACC;IACb;EACF,CAAC;EAED,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEG,MAAM,CAAC;EAEzC,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IAC3B;IACAb,UAAU,CAAC,CAAC;IACZc,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC/B,OAAO,IAAI;EACb;EAEA,OAAOL,QAAQ;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}