{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sarin\\\\dairy-farm-app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const checkAuthStatus = () => {\n      const storedToken = localStorage.getItem('token');\n      const storedUser = localStorage.getItem('user');\n      if (storedToken && storedUser) {\n        try {\n          const userData = JSON.parse(storedUser);\n          setToken(storedToken);\n          setUser(userData);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Error parsing stored user data:', error);\n          logout();\n        }\n      }\n      setIsLoading(false);\n    };\n    checkAuthStatus();\n  }, []);\n\n  // Login function\n  const login = (userData, userToken) => {\n    setUser(userData);\n    setToken(userToken);\n    setIsAuthenticated(true);\n\n    // Store in localStorage\n    localStorage.setItem('token', userToken);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    setIsAuthenticated(false);\n\n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n\n  // Update user data\n  const updateUser = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"pdC31XFQTw23Lo3VT9ciTlpjFlE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkAuthStatus","storedToken","localStorage","getItem","storedUser","userData","JSON","parse","error","console","logout","login","userToken","setItem","stringify","removeItem","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Sarin/dairy-farm-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const checkAuthStatus = () => {\r\n      const storedToken = localStorage.getItem('token');\r\n      const storedUser = localStorage.getItem('user');\r\n\r\n      if (storedToken && storedUser) {\r\n        try {\r\n          const userData = JSON.parse(storedUser);\r\n          setToken(storedToken);\r\n          setUser(userData);\r\n          setIsAuthenticated(true);\r\n        } catch (error) {\r\n          console.error('Error parsing stored user data:', error);\r\n          logout();\r\n        }\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = (userData, userToken) => {\r\n    setUser(userData);\r\n    setToken(userToken);\r\n    setIsAuthenticated(true);\r\n    \r\n    // Store in localStorage\r\n    localStorage.setItem('token', userToken);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    setIsAuthenticated(false);\r\n    \r\n    // Clear localStorage\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  // Update user data\r\n  const updateUser = (userData) => {\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    isAuthenticated,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMmB,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACjD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAE/C,IAAIF,WAAW,IAAIG,UAAU,EAAE;QAC7B,IAAI;UACF,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC;UACvCT,QAAQ,CAACM,WAAW,CAAC;UACrBR,OAAO,CAACY,QAAQ,CAAC;UACjBR,kBAAkB,CAAC,IAAI,CAAC;QAC1B,CAAC,CAAC,OAAOW,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;UACvDE,MAAM,CAAC,CAAC;QACV;MACF;MACAX,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMW,KAAK,GAAGA,CAACN,QAAQ,EAAEO,SAAS,KAAK;IACrCnB,OAAO,CAACY,QAAQ,CAAC;IACjBV,QAAQ,CAACiB,SAAS,CAAC;IACnBf,kBAAkB,CAAC,IAAI,CAAC;;IAExB;IACAK,YAAY,CAACW,OAAO,CAAC,OAAO,EAAED,SAAS,CAAC;IACxCV,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACT,QAAQ,CAAC,CAAC;EACxD,CAAC;;EAED;EACA,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBjB,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdE,kBAAkB,CAAC,KAAK,CAAC;;IAEzB;IACAK,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCb,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIX,QAAQ,IAAK;IAC/BZ,OAAO,CAACY,QAAQ,CAAC;IACjBH,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACT,QAAQ,CAAC,CAAC;EACxD,CAAC;EAED,MAAMY,KAAK,GAAG;IACZzB,IAAI;IACJE,KAAK;IACLE,eAAe;IACfE,SAAS;IACTa,KAAK;IACLD,MAAM;IACNM;EACF,CAAC;EAED,oBACEjC,OAAA,CAACC,WAAW,CAACkC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA3B,QAAA,EAChCA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,GAAA,CAxEWF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}